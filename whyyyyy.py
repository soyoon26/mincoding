from pprint import pprint
T = int(input())
# for tc in range(N):
N = int(input())
board = [[int(i) for i in input().split()] for _ in range(N)]
pprint(board)

di = [-1,1,0,0] #상하
dj = [0,0,-1,1] #좌우
for i in range(N):
    for j in range(N):
        if board[i][j] == 2:
            si = i
            sj = j
print(i,j)
one_lst = []
for i in range(4):
    for j in range(1,50):
        dx = si + di[i]*j
        dy = sj + dj[i]*j
        if 0 <= dx < N and 0 <= dy < N :
            if board[dx][dy] == 1:
                one_lst.append((dx,dy))
            if len(one_lst) ==2:
                print("원래",si,sj)
                si = dx
                sj = dy
                print("첫번째",si,sj)





```

박소윤(0
955466)
시험안내
자주묻는질문
메뉴얼
S / W
Problem
Solving
Reference
KR
EN
검정명
상시
SW역량
테스트[3 / 6(월) / 오후_A형]
검정
기간
2023 - 03 - 06
14: 30
~ 17: 30
남은
시간
00
:
33
:
25
문제별
상황
문제
상태
제출횟수
경과
시간
1
0 / ∞    01: 55:52
2
0 / ∞    01: 54:53
2.
장기
포
게임
제출횟수: 0  ∞제출시간: -상태:제출코드
문제
문제풀이

제한
조건

실행시간: 50
개의
테스트
케이스를
합쳐서
C / C + +의
경우
3
초, JAVA의
경우
3
초, Python
10
초

메
모
리: Heap, Global, Stack
등을
모두
합해
최대
256
MB까지
사용
가능(단, 스택은
최대
1
MB까지
사용
가능)

제출
횟수
제한

제한
없음

채점

Accept: Sample_input으로
채점시
정상적으로
제출되었다는
의미

(단순히 컴파일 에러 등 없다는 의미이며 점수는 공개하지 않음)

Fail: 컴파일, 런타임
에러
등으로
0
점

평가

Sample_input은
편의를
위해
제공하며, 실제
채점은
별도의
평가용
input으로
이루어진다.

장기
게임은
다양한
알(또는
말)을
포함하고
있다.

이
중
"포"
는
한
개의
다른
알을
넘어가서
이동
또는
또
다른
알을
잡을
수
있는
알이다.

[Fig. 1]
에서
표시된
빨간색
원이
포가
이동할
수
있는
위치이며, 빨간색
원에
다른
알이
있을
때에는
그
알을
잡을
수
있다.

[Fig.1]

아래[Fig.
2]은
2
차원으로
구성된
장기판에서의
예시이다.

10
X
10
크기의
장기판에
포
1
개와
포가
아닌
장기
알들이
놓여져
있다.

아래
그림에서
포가
1
번
움직여서
잡을
수
있는
알은
노란색으로
표시된
장기
알
2
개이다.

빨간색
원은
다른
알을
잡지
않지만
포가
이동할
수
있는
위치이다.

[Fig. 2]

아래의[Fig.
3 - 1] 은
포가
위로
1
번
이동
후
다시
한번
이동하게
되었을
때를
보여준다.

2
번째
이동하는
경우
2
개의
알(파란색으로
표시)이
잡을
수
있는
알이며,

빨간색
원은
알을
잡지
않고
이동할
수
있는
위치를
나타낸다.

[Fig. 3 - 1]

[Fig. 3 - 1]
과
같이
포를
2
번
이동하는
경우를
모두
고려하면[Fig.
3 - 2]와
같이
나타낼
수
있다.

노란색
장기
알이
1
회
이동하는
경우
잡을
수
있는
알이며, 2
회
이동했을
때
잡을
수
있는
파란색
장기
알까지
총
4
개가
잡을
가능성이
있는
알이
된다.

[Fig. 3 - 2]

아래의[Fig.
4]은
포를
3
번
움직이는
경우
잡을
수
있는
알들을
보여준다.

포를
3
번
움직이는
동안
잡을
가능성이
있는
알은
총
15
개
이다.

1
번
이동할
때
잡을
수
있는
장기
알이
노란색으로
표시된
2
개이며,

2
번
이동할
때
잡을
수
있는
장기
알이
파란색으로
표시된
2
개이고,

3
번
이동할
때
잡을
수
있는
장기
알이
초록색으로
표시된
11
개
이다.

[Fig. 4]

이와
같이
포를
3
번
움직이는
동안
잡을
가능성이
있는
알의
수를
구하라.

[제약사항]
1.
장기판은
항상
세로, 가로
각각
N으로
이루어져
있다.(1 ≤ N ≤ 50)



2.
포는
3
번까지
움직이며, 1
번
~3
번까지
이동하는
동안
잡을
수
있는
알은
잡을
가능성이
있는
알이다.

3.
포를
제외한
다른
알들은
움직이지
않는다.

4.
포는
반드시
하나의
알을
넘어서
움직이며, 빈
공간으로도
움직일
수
있다.

5.
포는
장기판
밖으로
나갈
수
없다.

6.
포는
다른
알을
넘어
가서
같은
행
또는
열의
빈
공간에
갈
수
있으나
2
개
이상의
알을
넘어갈
수
없다.

7.
포는
특정한
알을
넘어간
후
다시
넘어올
수
있다.

8.
포는
1
개만
존재한다.

[입력]
입력의
가장
첫
줄에는
총
테스트
케이스의
개수
T가
주어진다.
그
다음
줄부터는
각
테스트
케이스가
주어진다.

각
테스트
케이스의
첫
줄에는
장기판의
크기
N이
주어진다.
다음
N
개의
줄에는
장기판의
상태가
입력된다.

숫자
0
은
빈
공간을
의미하며, 숫자
1
은
포가
아닌
장기
알을
의미하며, 숫자
2
는
포를
의미한다.

[출력]
테스트
케이스
t에
대한
결과는 “  # t”을 찍고, 한 칸 띄고 포를 움직이는 동안 잡을 수 있는 장기 알의 수를 출력한다. (t는 테스트케이스의 번호를 의미하며 1부터 시작한다.)
만약, 잡을
수
있는
장기
알이
없다면
0
을
출력하라.

[예제 입력]

5 // 총
테스트
케이스
개수
T = 5

5 // 첫
번째
테스트
케이스, 장기판의
크기
N = 5

0
1
0
0
1

1
1
0
0
0

0
1
1
0
1

0
0
2
0
0

1
0
1
1
0

10 // 두
번째
테스트
케이스, 장기판의
크기
N = 10

0
1
0
0
0
0
0
0
0
0

0
0
0
0
1
0
0
0
0
0

0
1
1
0
1
0
0
1
0
0

0
0
0
0
1
0
0
0
0
0

0
1
1
0
0
0
0
0
0
0

0
0
0
0
2
0
1
0
1
0

0
0
0
0
0
0
1
0
0
0

1
0
1
1
0
0
1
0
0
0

0
0
0
0
0
0
0
0
1
0

0
1
0
0
1
0
1
1
0
0

20 // 세
번째
테스트
케이스, 장기판의
크기
N = 20

0
0
0
0
1
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0

0
0
0
1
0
0
0
0
0
1
0
0
1
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

0
1
0
0
0
0
2
0
0
0
0
0
0
1
0
0
0
0
0
0

0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0

0
0
0
0
1
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0

0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
0

0
0
0
0
1
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0

0
0
0
0
0
1
0
1
0
0
0
0
1
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
1
0
0
0
0

0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
1
0
0

1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

0
0
0
0
1
0
0
0
0
0
0
0
1
0
0
0
0
0
1
0

1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0

0
1
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0

0
1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
1
0
0
0
0

0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0

0
0
0
0
0
0
0
0
0
0
1
0
1
0
0
0
0
0
0
0

… // 나머지는
sample_input.txt
참조

[예제 입력에 대한 정답 출력]

# 1 4

# 2 15

# 3 18

# 4 0

# 5 102


© 2019
SAMSUNG.
```




